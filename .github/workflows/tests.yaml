name: Tests

on:
  pull_request:
    branches:
      - main


jobs:
  amsdal_glue:
    runs-on: self-hosted
    services:
      postgres:
        image: pgvector/pgvector:pg17
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [ "3.10", "3.11" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Hatch and UV setup
        run: |
          pip install --upgrade uv hatch
          cd libs/amsdal-glue
          hatch env prune
          hatch env create
          hatch run sync

      - name: Hatch run all
        run: |
          cd libs/amsdal-glue
          hatch run all

      - name: Hatch run test
        run: |
          cd libs/amsdal-glue
          hatch run test

  connections:
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
        options: >-
          --health-cmd "pg_isready -U test_user -d test_db"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Hatch and UV setup
        run: |
          pip install --upgrade uv hatch
          cd libs/connections
          hatch env prune
          hatch env create
          hatch run sync

      - name: Hatch run all
        run: |
          cd libs/connections
          hatch run all

      - name: Hatch run test
        run: |
          cd libs/connections
          hatch run test

  core:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [ "3.10", "3.11", "3.12" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Hatch and UV setup
        run: |
          pip install --upgrade uv hatch
          cd libs/core
          hatch env prune
          hatch env create
          hatch run sync

      - name: Hatch run all
        run: |
          cd libs/core
          hatch run all

  sql_parser:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [ "3.10", "3.11" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Hatch and UV setup
        run: |
          pip install --upgrade uv hatch
          cd libs/sql-parser
          hatch env prune
          hatch env create
          hatch run sync

      - name: Hatch run all
        run: |
          cd libs/sql-parser
          hatch run all

      - name: Hatch run test
        run: |
          cd libs/sql-parser
          hatch run test

  api_server:
    runs-on: self-hosted
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [ "3.10", "3.11" ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Hatch and UV setup
        run: |
          pip install --upgrade uv hatch
          cd libs/api-server
          hatch env prune
          hatch env create
          hatch run sync

      - name: Hatch run all
        run: |
          cd libs/api-server
          hatch run all

      - name: Hatch run test
        run: |
          cd libs/api-server
          hatch run test
