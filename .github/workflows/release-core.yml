name: Release - Core

on:
  push:
    tags:
      - 'core/v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Build and compile
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]
    env:
      PYTHON: ${{ matrix.python-version }}
      DEPS: yes

    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install hatch
        run: |
          python -m pip install hatch

      - name: Build
        run: cd libs/core && hatch build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: libs/core/dist/

  publish:
    name: Publish to PyPi
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]
    steps:
      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: libs/core/dist/

      - name: Branch info
        id: branch_info
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Install additional dependencies
        run: |
          sudo apt-get install -y libdbus-1-dev libdbus-glib-1-dev

      - name: Install hatch
        run: |
          python -m pip install hatch secretstorage dbus-python keyring

      - name: Publish
        run: |
          cd libs/core && hatch publish --user ${{ secrets.PYPI_USERNAME }} --auth ${{ secrets.PYPI_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          name: ${{ steps.branch_info.outputs.SOURCE_TAG }}
          body: |
            ${{ github.event.release.body }}
          draft: true
          prerelease: false
